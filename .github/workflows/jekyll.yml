# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Ruby
        uses: ruby/setup-ruby@ee2113536afb7f793eed4ce60e8d3b26db912da4 # v1.127.0
        with:
          ruby-version: '2.6' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v1

  # Deployment job
  deploy-github-pages:
    environment:
      name: github-pages
      url: ${{ steps.deployment-ghp.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment-ghp
        uses: actions/deploy-pages@v1

  deploy-ovh:
    strategy:
      matrix:
        ovh: [ovh-uat, ovh-prd]
    environment:
      name: ${{ matrix.ovh }}
      # url: https://michaelmaffait.ovh
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: github-pages
          path: .
      - name: Untar artifact contents
        run: tar -xf ${GITHUB_WORKSPACE}/artifact.tar && rm ${GITHUB_WORKSPACE}/artifact.tar
      - name: Deploy to Ovh
        id: deployment-ovh
        uses: SamKirkland/FTP-Deploy-Action@4.3.3
        with:
          server: ${{ vars.OVH_FTP_URL }}
          username: ${{ secrets.OVH_FTP_LOGIN }}
          password: ${{ secrets.OVH_FTP_PASS }}
          server-dir: ./www/